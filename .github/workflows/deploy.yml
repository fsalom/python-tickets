name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install SSH client
      run: sudo apt-get install -y openssh-client

    - name: Add SSH key and set permissions
      run: |
        echo "${{ secrets.DROPLET_SSH_KEY }}" | tr -d '\r' > key.pem
        chmod 600 key.pem

    - name: Create project and environment directories on server
      run: ssh -o StrictHostKeyChecking=no -i key.pem root@"${{ secrets.DROPLET_IP }}" "mkdir -p /root/app/.docker/app && mkdir -p /root/app/environments && mkdir -p /root/app/nginx/dev"

    - name: Copy Dockerfile for app to server
      run: scp -o StrictHostKeyChecking=no -i key.pem .docker/app/Dockerfile root@"${{ secrets.DROPLET_IP }}:/root/app/Dockerfile"

    - name: Copy environment variables to server
      run: |
        scp -o StrictHostKeyChecking=no -i key.pem .docker/environments/staging.env root@"${{ secrets.DROPLET_IP }}:/root/app/environments/staging.env"

    - name: Copy Docker Compose file to server
      run: scp -o StrictHostKeyChecking=no -i key.pem .docker/staging.yml root@"${{ secrets.DROPLET_IP }}:/root/app/docker-compose.yml"

    - name: Copy NGINX Dockerfile to server
      run: scp -o StrictHostKeyChecking=no -i key.pem .docker/nginx/dev/Dockerfile root@"${{ secrets.DROPLET_IP }}:/root/app/nginx/dev/Dockerfile"

    - name: Create code directory on server
      run: ssh -o StrictHostKeyChecking=no -i key.pem root@"${{ secrets.DROPLET_IP }}" "mkdir -p /root/app/code"

    - name: Copy project files to server
      run: scp -o StrictHostKeyChecking=no -i key.pem -r ./* ./.??* root@"${{ secrets.DROPLET_IP }}:/root/app/code/"

    - name: List files on server
      run: ssh -o StrictHostKeyChecking=no -i key.pem root@"${{ secrets.DROPLET_IP }}" "ls -la /root/app/.docker/app && ls -la /root/app"

    - name: Deploy application using docker-compose
      run: ssh -o StrictHostKeyChecking=no -i key.pem root@"${{ secrets.DROPLET_IP }}" "cd /root/app && docker-compose build --no-cache && docker-compose up -d"

    - name: Docker ps
      run: ssh -o StrictHostKeyChecking=no -i key.pem root@"${{ secrets.DROPLET_IP }}" "docker ps"

    - name: Clean up SSH key
      run: rm -f key.pem

