version: '3.8'

services:
  django:
    container_name: django
    build:
      context: .  # El contexto de construcción es el directorio raíz del proyecto
      dockerfile: Dockerfile  # Ruta al Dockerfile
    ports:
      - "8000:8000"
    env_file: 'environments/staging.env'  # Archivo de entorno
    command: "gunicorn infrastructure.django.wsgi:application -b 0.0.0.0:8000 --workers=3 --log-level=debug"
    depends_on:
      - postgres

  fastapi:
    container_name: fastapi
    build:
      context: .  # El contexto de construcción es el mismo, pero puedes tener un Dockerfile separado para FastAPI si lo prefieres
      dockerfile: Dockerfile  # Puedes usar un Dockerfile específico para FastAPI si es necesario
    ports:
      - "8001:8001"  # Puerto diferente para FastAPI
    env_file: 'environments/staging.env'  # Archivo de entorno
    command: "uvicorn main:app --host 0.0.0.0 --port 8001 --workers 3 --log-level debug"
    depends_on:
      - postgres

  postgres:
    container_name: 'postgres'
    restart: always
    image: 'postgres:16.3'
    env_file: 'environments/staging.env'
    ports:
      - '5432:5432'
    volumes:
      - 'pgdata:/var/lib/postgresql/data'

  nginx:
    container_name: 'nginx'
    restart: always
    build: 'nginx/dev'  # Asegúrate de que esta ruta exista
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - URL=chatbot-staging.rudo.es
      - SUBDOMAINS=www,
      - VALIDATION=http
      - EMAIL=fdosalom@gmail.com
    volumes:
      - 'nginx:/config'
    depends_on:
      - django
      - fastapi
    ports:
      - '443:443'
      - '80:80'  # Opcional

volumes:
  nginx:
  pgdata:
