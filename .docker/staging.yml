version: '3.3'

services:
  web:
    container_name: web
    restart: always
    build:
      context: ..  # Esto apunta al directorio superior donde están pyproject.toml y poetry.lock
      dockerfile: .docker/app/Dockerfile  # Cambia la referencia al Dockerfile
    ports:
      - '127.0.0.1:8000:8000'
    env_file: 'environments/staging.env'  # Ajusta la ruta del archivo .env si es necesario
    command: 'gunicorn infrastructure.django.wsgi:application -k gevent -w 3 -b :8000 --worker-connections=1000 --timeout=4000 --reload --capture-output --enable-stdio-inheritance --log-level=debug --access-logfile=- --log-file=/var/log/error.log'
    depends_on:
      - postgres

  postgres:
    container_name: 'postgres'
    restart: always
    image: 'postgres:16.3'
    env_file: 'environments/staging.env'  # Asegúrate de que esta ruta sea accesible
    ports:
      - '5432:5432'
    volumes:
      - 'pgdata:/var/lib/postgresql/data'

  nginx:
    container_name: 'nginx'
    restart: always
    build: 'nginx/dev'  # Ruta relativa correcta a la carpeta de NGINX
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - URL=chatbot-staging.rudo.es
      - SUBDOMAINS=www,
      - VALIDATION=http
      - EMAIL=fdosalom@gmail.com
    volumes:
      - 'nginx:/config'
    depends_on:
      - web
    ports:
      - '443:443'
      - '80:80'  # Opcional

volumes:
  nginx:
  pgdata:
