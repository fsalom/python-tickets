version: '3.8'

services:
  app:
    container_name: app
    build:
      context: ..  # El contexto de construcción es el directorio raíz del proyecto
      dockerfile: .docker/app/Dockerfile  # Ruta al Dockerfile
    ports:
      - "8000:8000"  # Puerto para Django
      - "8001:8001"  # Puerto para FastAPI
    env_file: 'environments/staging.env'  # Archivo de entorno
    image: 'websource'
    command: >
      gunicorn app.main:app
      -w 4
      -k uvicorn.workers.UvicornWorker
      --bind 0.0.0.0:8000
      --log-level debug
    volumes:
      - mediadata:/media
      - staticdata:/static
    depends_on:
      - postgres
    networks:
      - dashboard

  postgres:
    container_name: 'postgres'
    restart: always
    image: 'postgres:16.3'
    env_file: 'environments/staging.env'
    ports:
      - '5432:5432'
    volumes:
      - 'pgdata:/var/lib/postgresql/data'
    networks:
      - dashboard

  nginx:
    container_name: 'nginx'
    restart: always
    build: 'nginx/dev'  # Asegúrate de que esta ruta exista
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - URL=tickets.rudo.es
      - SUBDOMAINS=www,
      - VALIDATION=http
      - EMAIL=fdosalom@gmail.com
    volumes:
      - 'nginx:/config'
    depends_on:
      - app
    ports:
      - '443:443'
      - '80:80'  # Opcional
    networks:
      - dashboard

volumes:
  nginx:
  pgdata:
  mediadata:
  staticdata:

networks:
  dashboard: